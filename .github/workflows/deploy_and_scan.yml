name: Deploy and Scan with OWASP ZAP (No Docker)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set Up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy Node App to EC2
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          pkill node || true
          rm -rf ~/app
          mkdir -p ~/app
        EOF

        scp -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app

        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ~/app
          npm install
          nohup node app.js > app.log 2>&1 &
        EOF

  zap-scan:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
    - name: Install Java and ZAP
      run: |
        sudo apt update
        sudo apt install -y openjdk-11-jre-headless unzip wget
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.zip
        unzip ZAP_2.14.0_Linux.zip -d zap
        echo "ZAP installed"

    - name: Start ZAP Daemon
      run: |
        nohup ./zap/ZAP_2.14.0/zap.sh -daemon -host 127.0.0.1 -port 8090 -config api.disablekey=true &
        sleep 30  # wait for ZAP to initialize

    - name: Run ZAP Active Scan
      run: |
        curl "http://127.0.0.1:8090/JSON/ascan/action/scan/?url=${{ secrets.ZAP_TARGET_URL }}"
        sleep 60  # wait for scan to finish

    - name: Generate ZAP Report
      run: |
        curl "http://127.0.0.1:8090/OTHER/core/other/htmlreport/" -o zap-report.html

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: zap-report.html
